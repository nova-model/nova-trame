name: Build and Test

on: push

concurrency:
  group: "${{ github.ref }}"
  cancel-in-progress: true

env:
  NDIP_DOCKER_USER: "${{ secrets.NDIP_DOCKER_USER }}"
  NDIP_DOCKER_PASSWORD: "${{ secrets.NDIP_DOCKER_PASSWORD }}"
  NDIP_DOCKER_REPOSITORY: "${{ secrets.NDIP_DOCKER_REPOSITORY }}"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      GIT_STRATEGY: clone
      IMAGE_NAME: "${NDIP_DOCKER_REPOSITORY}/${{ github.repository }}"
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 20
          lfs: true
      - name: Build
        uses: docker/build-push-action@v6
        id: build
        with:
          file: Dockerfile
          load: true
      - name: Run ruff check
        run: docker run --rm ${{ steps.build.outputs.imageid }} poetry run ruff check
      - name: Run format check
        run: docker run --rm ${{ steps.build.outputs.imageid }} poetry run ruff format --check
      - name: Run mypy
        run: docker run --rm ${{ steps.build.outputs.imageid }} poetry run mypy .
      - name: Unit tests
        run: docker run --rm ${{ steps.build.outputs.imageid }} poetry run pytest
      # - run: mkdir reports
      # - run: docker run -u `id -u`:`id -g` -v `pwd`/reports:/src/reports ${IMAGE_NAME}:src-${{ github.sha }} poetry run coverage run
      # - run: docker run -u `id -u`:`id -g` -v `pwd`/reports:/src/reports ${IMAGE_NAME}:src-${{ github.sha }} poetry run coverage report
      # - run: docker run -u `id -u`:`id -g` -v `pwd`/reports:/src/reports ${IMAGE_NAME}:src-${{ github.sha }} poetry run coverage xml -o reports/coverage.xml
      # - run: sed -i "s:<source>/src:<source>${{ github.workspace }}/${{ github.repository }}:" reports/coverage.xml
      # need to figure out coverage rules
      - name: Docs test
        run: docker run --rm ${{ steps.build.outputs.imageid }} bash build_docs.sh
